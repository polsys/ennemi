name: Continuous Integration

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - '**.md'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ 3.6, 3.7, 3.8 ]
        # Save a bit of resources by running only some combinations:
        # Windows 3.6, macOS 3.7 and Ubuntu 3.8
        exclude:
          - os: windows-latest
            python-version: 3.7
          - os: windows-latest
            python-version: 3.8
          - os: macos-latest
            python-version: 3.6
          - os: macos-latest
            python-version: 3.8
          - os: ubuntu-latest
            python-version: 3.6
          - os: ubuntu-latest
            python-version: 3.7

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies and pytest
        run: |
          pip install -e .
          pip install scipy
          pip install pandas
          pip install pytest
      
      - name: Run unit tests (with coverage)
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
        # We have to rename the path in coverage.xml since Sonar is run in Docker
        # and has a different view of the file system
        run: |
          pip install pytest-cov
          python -m pytest tests/ --cov=ennemi --cov-report=xml --junit-xml=test-results.xml
          sed 's/\/home\/runner\/work\/ennemi\/ennemi/\/github\/workspace/g' coverage.xml > coverage-mod.xml
      
      - name: Run unit tests (no coverage)
        if: matrix.os != 'ubuntu-latest' || matrix.python-version != '3.8'
        run: |
          python -m pytest tests/ -v --junit-xml=test-results.xml

      - name: Run type checker
        run: |
          pip install mypy
          python -m mypy --disallow-untyped-defs ennemi/ tests/
      
      - name: Run Sonar code analysis
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
